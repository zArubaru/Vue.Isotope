"use strict";function _toConsumableArray(t){if(Array.isArray(t)){for(var e=0,i=Array(t.length);e<t.length;e++)i[e]=t[e];return i}return Array.from(t)}!function(){function t(t,e){function i(t,e){if(t.data){var i=t.data.staticClass?t.data.staticClass+" ":"";t.data.staticClass=i+e}}function r(t){return t.__underlying_element}function n(t,e){var i=t?"Warning template error: isotope "+t:"Warning template error: isotope undefined error";if(e){var r=e.componentOptions,n=r?r.Ctor.options.name||r.tag||"":e.tag;console.error(i+": <"+n+">")}else console.error(i)}return{props:{options:{type:Object,default:{layoutMode:"masonry",masonry:{gutter:10}},sort:String},itemSelector:{type:String,default:"item"},list:{type:Array,required:!0}},data:function(){var t=void 0;return this.options&&this.options.masonry&&(t={gutter:this.options.masonry.gutter,columnWidth:this.options.masonry.columnWidth},Object.keys(t).forEach(function(e){var i=t[e];"string"==typeof i&&i.length>1&&(t[e]=i.substr(1))})),{masonryOptions:t}},render:function(t){for(var e={},r=this.prevChildren=this.children,o=this.$slots.default||[],s=this.children=[],a=this.removedIndex=[],u=0;u<o.length;u++){var l=o[u];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))e[l.key]&&n("children keys must be unique",l),i(l,this.itemSelector),s.push(l),e[l.key]=l;else if(Object.keys(this.masonryOptions).length&&l.data.attrs&&(l.data.attrs.gutter||l.data.attrs["column-width"])){var h=void 0;l.data.attrs.gutter?(this.masonryOptions.gutter?this.masonryOptions.gutter!==l.data.attrs.gutter&&n("masonry options' gutter property isn't equal to the gutter sizer's gutter property",l):n("masonry options don't include a gutter property",l),l.key="$gutter-sizer",h=l.data.attrs.gutter):(this.masonryOptions.columnWidth?this.masonryOptions.columnWidth!==l.data.attrs["column-width"]&&n("masonry options' columnWidth property isn't equal to the gutter sizer's column-width property",l):n("masonry options don't include a columnWidth property",l),l.key="$grid-sizer",h=l.data.attrs["column-width"]),h?e[l.key]?n("children keys must be unique, no duplicate gutter- or grid-sizers",l):(i(l,h),s.push(l),e[l.key]=l):"$gutter-sizer"===l.key?n("gutter-sizer doesn't have a gutter property",l):n("grid-sizer doesn't have a column-width property",l)}else n("children must be keyed",l)}var d=this.displayChildren=[].concat(s);if(r)for(var c=0;c<r.length;c++){var f=r[c];e[f.key]||(d.splice(c,0,f),a.push(c))}return t("div",null,d)},mounted:function(){var i=this,n=t.merge({},this.compiledOptions),o=function(e){t.forOwn(e,function(t,n){e[n]=function(e){var n=r(e);return t.call(i,n.vm,n.index)}})};o(n.getSortData),o(n.getFilterData),this._isotopeOptions=n,n.filter&&(n.filter=this.buildFilterFunction(n.filter)),this.$nextTick(function(){i.link(),i.listen();var t=new e(i.$el,n);t._requestUpdate=function(){t._willUpdate||(t._willUpdate=!0,i.$nextTick(function(){t.arrange(),t._willUpdate=!1}))},i.iso=t})},beforeDestroy:function(){this.iso.destroy(),t.forEach(this._listeners,function(t){t()}),this._filterlistener&&this._filterlistener(),this.iso=null},beforeUpdate:function(){this._oldChidren=Array.prototype.slice.call(this.$el.children)},updated:function(){var e=this;if(this.iso){var i=[].concat(_toConsumableArray(this.$el.children)),r=t.difference(i,this._oldChidren),n=this.removedIndex.map(function(t){return e.$el.children[t]});this.cleanupNodes(),this.link(),(n.length||r.length)&&(this.listen(),this.iso.remove(n),this.iso.insert(r),this.iso._requestUpdate())}},methods:{cleanupNodes:function(){var t=this;this.removedIndex.reverse(),this.removedIndex.forEach(function(e){return t._vnode.children.splice(e,1)})},link:function(){var t=this;(this.$slots.default||[]).forEach(function(e,i){var r=e.elm;r&&(r.__underlying_element={vm:t.list[i],index:i})})},listen:function(){var e=this;this._listeners=t(this.compiledOptions.getSortData).map(function(i){return t.map(e.list,function(t,r){return e.$watch(function(){return i(t)},function(){e.iso.updateSortData(),e.iso._requestUpdate()})})}).flatten().value()},sort:function(e){var i=e;t.isString(e)&&(i={sortBy:e}),this.arrange(i),this.$emit("sort",e)},buildFilterFunction:function(e){var i=this,r=this._isotopeOptions.getFilterData[e];return this._filterlistener=this.$watch(function(){return t.map(i.list,function(t,r){return i.options.getFilterData[e](t,r)})},function(){i.iso._requestUpdate()}),r},filter:function(t){var e=this.buildFilterFunction(t);this.arrange({filter:e}),this.$emit("filter",t)},unfilter:function(){this.arrange({filter:function(){return!0}}),this.$emit("filter",null)},layout:function(e){var i=e;t.isString(e)&&(i={layoutMode:e}),this.arrange(i),this.$emit("layout",i)},arrange:function(t){this.iso.arrange(t),this.$emit("arrange",t)},shuffle:function(){this.iso.shuffle(),this.$emit("shuffle"),this.$emit("sort",null)},getFilteredItemElements:function(){return this.iso.getFilteredItemElements()},getElementItems:function(){return this.iso.getElementItems()}},computed:{compiledOptions:function(){var e=t.merge({},this.options,{itemSelector:"."+this.itemSelector,isJQueryFiltering:!1});return t.forOwn(e.getSortData,function(i,r){t.isString(i)&&(e.getSortData[r]=function(t){return t[i]})}),e}}}}if("object"==typeof exports){var e=require("lodash"),i=require("isotope-layout");module.exports=t(e,i)}else if("function"==typeof define&&define.amd)define(["lodash","Isotope"],function(e,i){return t(e,i)});else if(window.Vue&&window._&&window.Isotope){var r=t(window._,window.Isotope);Vue.component("isotope",r)}}();
